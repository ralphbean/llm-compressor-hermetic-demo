apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: llm-compressor-hermetic-build
  labels:
    app.kubernetes.io/version: "1.0"
  annotations:
    description: "Hermetic build pipeline for LLM quantization using llm-compressor"
spec:
  params:
    - name: git-url
      type: string
      description: Source code repository URL
    - name: revision
      type: string
      description: Git revision to checkout
      default: main
    - name: output-image
      type: string
      description: Target image reference (optional, for future container builds)
      default: ""
    - name: hermeto-image
      type: string
      description: Custom hermeto image with x-huggingface support
      default: "quay.io/rbean/hermeto:x-huggingface"

  workspaces:
    - name: git-basic-auth
      description: Git credentials (optional)
      optional: true

  results:
    - name: IMAGE_URL
      description: URL of the built image
      value: "$(tasks.init.results.build)"
    - name: IMAGE_DIGEST
      description: Digest of the built image
      value: "$(tasks.build-container.results.IMAGE_DIGEST)"

  tasks:
    # Task 1: Initialize with OCI-TA
    - name: init
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-init-oci-ta:0.2
          - name: name
            value: init
          - name: kind
            value: task
      params:
        - name: image-url
          value: "$(params.output-image)"

    # Task 2: Clone repository using OCI-TA
    - name: clone-repository
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1
          - name: name
            value: git-clone-oci-ta
          - name: kind
            value: task
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.revision)"
        - name: ociStorage
          value: "$(tasks.init.results.ociStorage)"
        - name: ociArtifactExpiresAfter
          value: "$(tasks.init.results.ociArtifactExpiresAfter)"
      workspaces:
        - name: basic-auth
          workspace: git-basic-auth
      runAfter:
        - init

    # Task 3: Prefetch dependencies using hermeto x-huggingface with OCI-TA
    - name: prefetch-dependencies
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.1
          - name: name
            value: prefetch-dependencies-oci-ta
          - name: kind
            value: task
      params:
        - name: input
          value: "huggingface.lock.yaml"
        - name: hermeto-image
          value: "$(params.hermeto-image)"
        - name: SOURCE_ARTIFACT
          value: "$(tasks.clone-repository.results.SOURCE_ARTIFACT)"
        - name: ociStorage
          value: "$(tasks.init.results.ociStorage)"
        - name: ociArtifactExpiresAfter
          value: "$(tasks.init.results.ociArtifactExpiresAfter)"
      runAfter:
        - clone-repository

    # Task 4: Run LLM compressor quantization
    - name: llm-compressor
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/ralphbean/build-definitions
          - name: revision
            value: llm-compressor
          - name: pathInRepo
            value: task/llm-compressor/0.1/llm-compressor.yaml
      params:
        - name: IMAGE
          value: "registry.redhat.io/rhaiis/model-opt-cuda-rhel9:3.2.3-1760571858"
        - name: SCRIPT
          value: "compress.py"
        - name: ARGS
          value:
            - "--output-dir"
            - "/workspace/output/quantized-model"
        - name: SOURCE_ARTIFACT
          value: "$(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)"
        - name: ociStorage
          value: "$(tasks.init.results.ociStorage)"
        - name: ociArtifactExpiresAfter
          value: "$(tasks.init.results.ociArtifactExpiresAfter)"
      runAfter:
        - prefetch-dependencies

  finally:
    # Show SBOM generated by hermeto
    - name: show-sbom
      taskRef:
        resolver: bundles
        params:
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-show-sbom-oci-ta:0.1
          - name: name
            value: show-sbom-oci-ta
          - name: kind
            value: task
      params:
        - name: IMAGE_URL
          value: "$(params.output-image)"
        - name: SOURCE_ARTIFACT
          value: "$(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)"
